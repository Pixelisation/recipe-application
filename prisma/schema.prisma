// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                Int     @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model verification {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            Int     @id @default(autoincrement())
  email         String? @unique
  emailVarified String?
  image         String?

  Account         Account[]
  Session         Session[]
  writtenRecipes  Recipes[] @relation("WrittenRecipes")
  favoriteRecipes Recipes[] @relation("FavoriteRecipes")
}

model Recipes {
  id            Int      @id @default(autoincrement())
  image         Bytes
  title         String
  prep_time     Int
  cook_time     Int
  total_time    Int
  discription   String   @db.Text
  ingredients   String   @db.Text
  instructions  String   @db.Text
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  author        User     @relation("WrittenRecipes", fields: [authorId], references: [id])
  authorId      Int
  favoritedBy   User?    @relation("FavoriteRecipes", fields: [favoritedById], references: [id])
  favoritedById Int?
}
